AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  ServiceName:
    Description: Name of your module (e.g. data-services).
    Type: String
    MinLength: 1
    Default: data-services
  Testing:
    Type: String
    AllowedValues:
    - 'true'
    - 'false'
    Default: 'true'
  BucketName:
    Type: String
    Default: bq-shakhomirov.bigquery.aws
  IngestManagerSuccessTableName:
    Type: String
    Default: ingest-manager-success
  Email:
    Type: String
    Description: Email address to notify when Lambda has triggered an alarm
    Default: yourEmail@mail.com
Resources:
  AlarmNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint: mshakhomirov@gmail.com
        Protocol: email
  LambdaPolicy:
    Type: AWS::IAM::Policy
    DependsOn: LambdaRole
    Properties:
      Roles:
      - Ref: LambdaRole
      PolicyName: bigquery-pipe-lambda-policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Action: s3:*
          Resource: '*'
        - Effect: Allow
          Action:
          - lambda:*
          Resource:
          - '*'
        - Effect: Allow
          Action:
          - ec2:CreateNetworkInterface
          - ec2:DescribeNetworkInterfaces
          - ec2:DeleteNetworkInterface
          Resource:
          - '*'
        - Sid: ''
          Effect: Allow
          Action:
          - logs:*
          Resource:
          - arn:aws:logs:*:log-group:/aws/lambda/*:*
        - Sid: CloudWatchEventsFullAccess
          Effect: Allow
          Action: events:*
          Resource:
          - '*'
        - Sid: IAMPassRoleForCloudWatchEvents
          Effect: Allow
          Action: iam:PassRole
          Resource:
          - arn:aws:iam::*:role/AWS_Events_Invoke_Targets
        - Action:
          - rds:Describe*
          - rds:ListTagsForResource
          - ec2:DescribeAccountAttributes
          - ec2:DescribeAvailabilityZones
          - ec2:DescribeInternetGateways
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcAttribute
          - ec2:DescribeVpcs
          Effect: Allow
          Resource: '*'
        - Action:
          - cloudwatch:GetMetricStatistics
          - logs:DescribeLogStreams
          - logs:GetLogEvents
          Effect: Allow
          Resource: '*'
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
  PayPalLambda:
    Type: AWS::Serverless::Function
    DependsOn: LambdaPolicy
    Properties:
      Handler: bq-paypal-revenue/app.handler
      Runtime: nodejs12.x
      FunctionName: bq-paypal-revenue
      Description: Microservice that updates BigQuery PayPal source table using schedule
      Environment:
        Variables:
          DEBUG: true
          TESTING: 'false'
          DB_BUCKET_TEST: data-staging.your-bucket.aws
          DB_BUCKET: data.your-bucket.aws
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Timeout: 180
      MemorySize: 128
      Tags:
        Service: BigQuery
      CodeUri: s3://lambdas.bq-shakhomirov.aws/dcb618d6257957f605871295b0a1a187
  PayPalLambdaTrigger:
    Type: AWS::Events::Rule
    DependsOn: PayPalLambda
    Properties:
      Description: Triggers the lambda 'bq-paypal-revenue' to extract data from API.
      ScheduleExpression: cron(00 6 * * ? *)
      Targets:
      - Arn:
          Fn::GetAtt:
          - PayPalLambda
          - Arn
        Input: '{}'
        Id: BigQueryPayPalTrigger
  PermissionForEventsToInvokePayPalLambda:
    Type: AWS::Lambda::Permission
    DependsOn:
    - PayPalLambda
    - PayPalLambdaTrigger
    Properties:
      FunctionName:
        Ref: PayPalLambda
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - PayPalLambdaTrigger
        - Arn
  BqPayPalLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      LogGroupName: /aws/lambda/bq-paypal-revenue
  BqPayPalERRORMetricFilter:
    Type: AWS::Logs::MetricFilter
    DependsOn: BqPayPalLogGroup
    Properties:
      LogGroupName: /aws/lambda/bq-paypal-revenue
      FilterPattern: ERROR
      MetricTransformations:
      - MetricValue: '1'
        MetricNamespace: bq-paypal-revenue
        MetricName: ERRORCount
  BqPayPalERRORMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn: BqPayPalERRORMetricFilter
    Properties:
      AlarmDescription: Trigger an alaram when the number ERROR greater than 1 for
        5 consecutive minutes.
      Namespace: bq-paypal-revenue
      MetricName: ERRORCount
      Statistic: Sum
      Period: '60'
      EvaluationPeriods: '5'
      ComparisonOperator: GreaterThanThreshold
      Threshold: '0'
      AlarmActions:
      - Ref: AlarmNotificationTopic
  IngestManagerLambda:
    Type: AWS::Serverless::Function
    DependsOn: LambdaPolicy
    Properties:
      Handler: bq-ingest-manager/app.handler
      Runtime: nodejs12.x
      FunctionName: bq-ingest-manager
      Description: Microservice that loads data into BigQuery
      Environment:
        Variables:
          DEBUG: true
          TESTING: 'false'
          DB_BUCKET_TEST: bq-shakhomirov.bigquery.aws
          DB_BUCKET: data.your-bucket.aws
          DYNAMO_SUCCESS: ingest-manager-success
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Timeout: 180
      MemorySize: 128
      Tags:
        Service: BigQuery
      CodeUri: s3://lambdas.bq-shakhomirov.aws/dcb618d6257957f605871295b0a1a187
  IngestManagerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      LogGroupName: /aws/lambda/bq-ingest-manager
  IngestManagerERRORMetricFilter:
    Type: AWS::Logs::MetricFilter
    DependsOn: IngestManagerLogGroup
    Properties:
      LogGroupName: /aws/lambda/bq-ingest-manager
      FilterPattern: ERROR
      MetricTransformations:
      - MetricValue: '1'
        MetricNamespace: /aws/lambda/bq-ingest-manager
        MetricName: ERRORCount
  IngestManagerERRORMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn: IngestManagerERRORMetricFilter
    Properties:
      AlarmDescription: Trigger a the number ERROR greater than 5 for 5 consecutive
        minutes.
      Namespace: /aws/lambda/bq-ingest-manager
      MetricName: ERRORCount
      Statistic: Sum
      Period: '60'
      EvaluationPeriods: '5'
      ComparisonOperator: GreaterThanThreshold
      Threshold: '0'
      AlarmActions:
      - Ref: AlarmNotificationTopic
  DataBucket:
    Type: AWS::S3::Bucket
    DependsOn:
    - PermissionForEventsToInvokeIngestManagerLambda
    Properties:
      BucketName:
        Ref: BucketName
      NotificationConfiguration:
        LambdaConfigurations:
        - Event: s3:ObjectCreated:*
          Function:
            Fn::GetAtt:
            - IngestManagerLambda
            - Arn
  PermissionForEventsToInvokeIngestManagerLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: IngestManagerLambda
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:s3:::${BucketName}
